% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/answer_as_code.R
\name{answer_as_code}
\alias{answer_as_code}
\title{Instruct LLM to answer a prompt with R code}
\usage{
answer_as_code(
  prompt,
  add_text = "You must code in the programming language 'R' to answer this prompt.",
  pkgs_to_use = c(),
  evaluate_code = TRUE,
  evaluation_session = NULL,
  list_packages = TRUE,
  list_objects = TRUE,
  output_as_tool = TRUE,
  return_mode = c("full", "code", "console", "object", "llm_answer")
)
}
\arguments{
\item{prompt}{A character string or a tidyprompt object}

\item{add_text}{Character string which will be added to the prompt text,
informing the LLM that they must code in R to answer the prompt.}

\item{pkgs_to_use}{A character vector of package names that may be used
in the R code that the LLM will generate}

\item{evaluate_code}{Logical indicating whether the R code should be
evaluated. If TRUE, the R code will be evaluated in an R session.}

\item{evaluation_session}{An r_session object (from the callr package) to
evaluate the R code. If NULL, a new r_session object will be created.}

\item{list_packages}{Logical indicating whether the LLM should be informed
about the packages that may be used in the R code}

\item{list_objects}{Logical indicating whether the LLM should be informed
about the objects that already exist in the R session, including their types}

\item{output_as_tool}{Logical indicating whether the console output of the
evaluated R code should be sent back to the LLM, meaning the LLM will use
R code as a tool to formulate an answer to the prompt.If so, the LLM
can decide if they can answer the prompt or if they need to modify their R code.
Once the LLM does not provide new R code (i.e., the prompt is being answered)
this prompt wrap will end (but it will continue as long as the LLM
provides R code).}
}
\value{
A tidyprompt object with the new prompt wrap added to it
}
\description{
This function adds a prompt wrap to a tidyprompt object that instructs the
LLM to answer the prompt with R code. There are various options to customize
the behavior of this prompt wrap, concerning the evaluation of the R code,
the packages that may be used, the objects that already exist in the R
session, and if the console output that should be sent back to the LLM. For
the evaluation of the R code, the 'callr' package is required. Please note:
automatic evaluation of generated R code may be dangerous to your system;
use this function with caution.
}
\examples{
\dontrun{
"Hi, what is 24314*24433?" |>
 answer_as_code() |>
 answer_as_integer() |>
 answer_by_chain_of_thought() |>
 send_prompt()

 paste0(
 "Using the built-in airquality dataset in R,",
 " calculate the average Ozone level for days in May with temperatures",
 " above 80Â°F."
 ) |>
  answer_as_integer() |>
  answer_as_code(pkgs_to_use = c("dplyr")) |>
  answer_by_chain_of_thought() |>
  send_prompt()

 plot <- paste0(
   "Using ggplot2, create a scatter plot of miles per gallon (mpg) versus",
   " horsepower (hp) for the cars in the mtcars dataset.",
   " Use different colors to represent the number of cylinders (cyl)."
 ) |>
   answer_as_code(
     pkgs_to_use = c("ggplot2"), evaluate_code = FALSE, output_as_tool = FALSE
   ) |>
   answer_by_chain_of_thought(extract_from_finish_brackets = FALSE) |>
   send_prompt() |>
   eval()
 plot
}
}
