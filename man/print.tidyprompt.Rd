% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/print.R
\name{print.tidyprompt}
\alias{print.tidyprompt}
\title{Print Method for tidyprompt Objects}
\usage{
\method{print}{tidyprompt}(x, ...)
}
\arguments{
\item{x}{A \code{tidyprompt} object. The object should contain:
\describe{
\item{\code{base_prompt}}{A character string containing the base prompt text.}
\item{\code{prompt_wraps}}{A list containing wrapper functions that modify
the base prompt.}
}}

\item{...}{Additional arguments passed to \code{print.tidyprompt}
(not used; needs to be present in line with guidelines for generic functions).}
}
\value{
This function is used for its side effect of printing the prompt
to the console. It returns \code{p} invisibly.
}
\description{
This function is a custom print method for displaying a \code{tidyprompt} object.
A \code{tidyprompt} typically contains a base prompt and may have additional prompt
wrappers that modify it. This function applies the modifications specified
in the wrapper functions and displays the resulting prompt in a structured
and visually clear manner.
}
\details{
The \code{print.tidyprompt} function displays the base prompt and, if applicable,
the modified prompt after applying the wrapper functions. The output is formatted
with line breaks preserved and with colored text to distinguish metadata from
the prompt content. This is done using the \code{crayon} package to enhance
readability, similar to the printing of tibbles in the tidyverse.
}
\examples{
\dontrun{
  # Creating a simple tidyprompt object
  prompt_obj <- tidyprompt("What is the capital of France?")

  # Print the prompt object
  print(prompt_obj)

  # Adding some wrapper functions
  prompt_obj <- prompt_obj |>
    prompt_wrap(modify_fn = \(x) paste0("Answer concisely: ", x))

  # Print the modified prompt object
  print(prompt_obj)
}

}
