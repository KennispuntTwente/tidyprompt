% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidyprompt.R
\name{get_prompt_wraps}
\alias{get_prompt_wraps}
\title{Get prompt wraps from a Tidyprompt}
\usage{
get_prompt_wraps(x, order = c("default", "modification", "evaluation"))
}
\arguments{
\item{x}{A Tidyprompt object}

\item{order}{The order to return the wraps. Options are:
\itemize{
\item "default": as added to the Tidyprompt
\item "modification": ordered for modification of the base prompt;
ordered by type: unspecified, mode, tool, break. This is the order
in which wraps are applied during \code{\link[=construct_prompt_text]{construct_prompt_text()}}
\item "evaluation": ordered for evaluation of the LLM response;
ordered by type: tool, mode, break, unspecified. This is the order
in which wraps are applied to the LLM output during \code{\link[=send_prompt]{send_prompt()}}
}}
}
\value{
A list of prompt wrap objects (see \code{\link[=prompt_wrap]{prompt_wrap()}})
}
\description{
Get prompt wraps from a Tidyprompt
}
\examples{
tidyprompt("Hi!")

# Add to a tidyprompt using a prompt wrap:
tidyprompt("Hi!") |>
  add_text("How are you?")

# Strings can be input for prompt wraps; therefore,
#   a call to tidyprompt() is not necessary:
"Hi" |>
  add_text("How are you?")

# Example of adding extraction & validation with a prompt_wrap():
prompt <- "Hi" |>
  add_text("What is 5 + 5?") |>
  answer_as_integer()

\dontrun{
  # tidyprompt objects are evaluated by send_prompt(), which will
  #   handle construct the prompt text, send it to the LLM provider,
  #   and apply the extraction and validation functions from the tidyprompt object
  prompt |>
    send_prompt(llm_provider_ollama())
  # --- Sending request to LLM provider (llama3.1:8b): ---
  #   Hi
  #
  #   What is 5 + 5?
  #
  #   You must answer with only an integer (use no other characters).
  # --- Receiving response from LLM provider: ---
  #   10
  # [1] 10

  # See prompt_wrap() and send_prompt() for more details
}

# `tidyprompt` objects may be validated with these helpers:
is_tidyprompt(prompt) # Returns TRUE if input is a valid tidyprompt object

# Get base prompt text
prompt$base_prompt

# Get all prompt wraps
prompt$get_prompt_wraps()

# Construct prompt text
prompt$construct_prompt_text()

# Configure chat history (affecting also the base prompt)
chat_history <- data.frame(
  role = c("user", "assistant", "user"),
  content = c("What is 5 + 5?", "10", "And what is 5 + 6?")
)
prompt$set_chat_history(chat_history)

# Get chat history
prompt$get_chat_history()
}
\seealso{
Other tidyprompt: 
\code{\link{construct_prompt_text}()},
\code{\link{get_chat_history}()},
\code{\link{is_tidyprompt}()},
\code{\link{set_chat_history}()},
\code{\link{tidyprompt}()},
\code{\link{tidyprompt-class}}
}
\concept{tidyprompt}
