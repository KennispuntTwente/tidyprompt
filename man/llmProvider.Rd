% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/llm_provider_R6.R
\name{llmProvider}
\alias{llmProvider}
\title{llmProvider R6 Class}
\description{
This class provides a structure for creating \code{llmProvider} objects with
different implementations of the \code{complete_chat} function. Using this
class, you can create an \code{llmProvider} object that interacts with different
LLM providers, such Ollama, OpenAI, or other custom providers.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{parameters}}{A named list of parameters to configure the \code{llm_provider}.
Parameters may be appended to the request body when interacting with the
LLM provider API.}

\item{\code{verbose}}{A logical indicating whether interaction with the LLM provider
should be printed to the console}

\item{\code{url}}{The URL to the LLM provider API endpoint for chat completion}

\item{\code{api_key}}{The API key to use for authentication with the LLM provider API}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-llmProvider-new}{\code{llmProvider$new()}}
\item \href{#method-llmProvider-set_parameters}{\code{llmProvider$set_parameters()}}
\item \href{#method-llmProvider-complete_chat}{\code{llmProvider$complete_chat()}}
\item \href{#method-llmProvider-clone}{\code{llmProvider$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-llmProvider-new"></a>}}
\if{latex}{\out{\hypertarget{method-llmProvider-new}{}}}
\subsection{Method \code{new()}}{
Create a new \code{llmProvider} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{llmProvider$new(
  complete_chat_function,
  parameters = list(),
  verbose = TRUE,
  url = NULL,
  api_key = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{complete_chat_function}}{Function that will be called by the \code{llm_provider}
to complete a chat. This function should take a \code{chat_history} data frame
as input and return a response object (a list with \code{role} and \code{content},
detailing the chat completion)}

\item{\code{parameters}}{A named list of parameters to configure the \code{llm_provider}.
These parameters may be appended to the request body when interacting with
the LLM provider. For example, the \code{model} parameter may often be required.
The 'stream' parameter may be used to indicate that the API should stream,
which will be handled down the line by the make_llm_provider_request function.
Parameters should not include the chat_history, as this is passed as a
separate argument to the \code{complete_chat_function}. Paramters should also
not include 'api_key' or 'url'; these are treated separately}

\item{\code{verbose}}{A logical indicating whether interaction with the LLM provider
should be printed to the console}

\item{\code{url}}{The URL to the LLM provider API endpoint for chat completion
(typically required, but may be left NULL in some cases, for instance when
creating a fake LLM provider)}

\item{\code{api_key}}{The API key to use for authentication with the LLM provider API
(optional, not required for, for instance, Ollama)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{llmProvider} R6 object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-llmProvider-set_parameters"></a>}}
\if{latex}{\out{\hypertarget{method-llmProvider-set_parameters}{}}}
\subsection{Method \code{set_parameters()}}{
Helper function to set the parameters of the llmProvider
object. This function appends new parameters to the existing parameters
list.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{llmProvider$set_parameters(new_parameters)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{new_parameters}}{A named list of new parameters to append to the
existing parameters list}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The modified \code{llmProvider} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-llmProvider-complete_chat"></a>}}
\if{latex}{\out{\hypertarget{method-llmProvider-complete_chat}{}}}
\subsection{Method \code{complete_chat()}}{
complete_chat function; sends a chat_history to the LLM provider
using the configured \code{complete_chat_function}. This function is typically
called by the \code{send_prompt} function to interact with the LLM provider,
but it can also be called directly.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{llmProvider$complete_chat(chat_history)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{chat_history}}{A data frame with 'role' and 'content' columns}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The response from the LLM provider, in a named list
with 'role' and 'content'
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-llmProvider-clone"></a>}}
\if{latex}{\out{\hypertarget{method-llmProvider-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{llmProvider$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
