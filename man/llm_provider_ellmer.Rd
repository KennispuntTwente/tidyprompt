% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/llm_providers.R
\name{llm_provider_ellmer}
\alias{llm_provider_ellmer}
\title{Create a new ellmer LLM provider}
\usage{
llm_provider_ellmer(chat, verbose = getOption("tidyprompt.verbose", TRUE))
}
\arguments{
\item{chat}{An ellmer chat object (e.g., ellmer::chat_openai()).}

\item{verbose}{A logical indicating whether the interaction with the \linkS4class{llm_provider}
should be printed to the console. Default is TRUE.}
}
\value{
An \linkS4class{llm_provider} with api_type = "ellmer".
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

This function creates a \linkS4class{llm_provider} from an \code{ellmer::chat()} object.
This allows the user to use the various LLM providers which are supported
by the 'ellmer' R package, including respective configuration and features.

Please note that this function is experimental. This provider may show different behaviour than
other LLM providers, and may not function optimally.
}
\details{
Unlike other LLM provider classes,
LLM provider settings need to be managed in the \code{ellmer::chat()} object
(and not in the \verb{$parameters} list, for instance).
}
